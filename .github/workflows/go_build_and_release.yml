name: Go Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number for release'
        required: true
  push:
    tags:
      - v*
env:
  VERSION: ${{ github.event.inputs.version || github.ref }}
jobs:
  create_release:
    runs-on: ubuntu-latest
    permissions: write-all
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create tag
        if: github.event_name == 'workflow_dispatch'
        run: git tag -f ${{ github.event.inputs.version }}

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Generate Release Notes
        run: |
          # language: shell
          go build -o ai
          LAST_RELEASE=$(git describe --tags --match "v*" --exclude "*-rc*" --exclude "$VERSION" --abbrev=0)
          RELEASE_NOTES=$(git log --pretty=format:"%s" $LAST_RELEASE.. | ./ai --text \
            "Generate release notes for AI terminal assistant, a developer oriented cli tool.
            Write the release notes in a user-friendly way. Skip technical details that don't matter to a user.")
          echo "RELEASE_NOTES=$RELEASE_NOTES" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: "${{ github.event.inputs.version }}"
          draft: draft
          prerelease: false
          body: ${{ env.RELEASE_NOTES }}
        continue-on-error: true

  build:
    permissions: write-all
    needs: create_release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos:
          - windows
          - linux
          - darwin
        goarch:
          - amd64
          - arm64 # not supported by keybd_event
        exclude:
          - goarch: arm64
          - goos: darwin # keybd currently not supported on darwin
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      EXECUTABLE_NAME: ai${{ (matrix.goos == 'windows') && '.exe' || '' }}
      ARCHIVE_NAME: ai-${{ matrix.goos }}-${{ matrix.goarch }}.zip
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Build AI binary
        run: |
          go build -o $EXECUTABLE_NAME

      - name: Archive build artifacts
        id: artifacts
        run: |
          mkdir -p release
          
          # Add go executable and prompts.yaml to zip
          zip -j ./release/${ARCHIVE_NAME} ${EXECUTABLE_NAME} prompts.yaml

      - name: Upload to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./release/${{ env.ARCHIVE_NAME }}
          asset_name: ${{ env.ARCHIVE_NAME }}
          asset_content_type: application/octet-stream
  publish_release:
    permissions: write-all
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Publish Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: false
          prerelease: false
          tag_name: ${{ env.VERSION }}
