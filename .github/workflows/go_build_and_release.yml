name: Go Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number for release'
        required: true
  push:
    tags:
      - v*
env:
  VERSION: ${{ github.event.inputs.version || github.ref }}
jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos:
          - windows
          - linux
          - darwin
        goarch:
          - amd64
          - arm64 # not supported by keybd_event
        exclude:
          - goarch: arm64
          - goos: darwin # keybd currently not supported on darwin
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      EXECUTABLE_NAME: ai${{ (matrix.goos == 'windows') && '.exe' || '' }}
      ARCHIVE_NAME: ai-${{ matrix.goos }}-${{ matrix.goarch }}.zip
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Build AI binary
        run: |
          go build -o $EXECUTABLE_NAME

      - name: Archive build artifacts
        id: artifacts
        run: |
          mkdir -p release
          zip -j ./release/${ARCHIVE_NAME} ${EXECUTABLE_NAME} prompts.yaml
  release:
    permissions: write-all
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Build AI binary
        run: go build -o ai

      - name: Generate Release Notes
        run: |
          # language: shell
          LAST_RELEASE=$(git describe --tags --match "v*" --exclude "*-rc*" --exclude "$VERSION" --abbrev=0)
          git log --pretty=format:"%s" $LAST_RELEASE.. | ./ai -3 --text \
            "Generate release notes for AI terminal assistant ${VERSION}, a developer oriented cli tool that lets users enter shell commands using natural language.
            Write the release notes in a user-friendly way, with some emojis. Use markdown. Skip technical details that don't matter to a user." > release_notes.txt
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      - name: Publish Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
          files: |
            release/*.zip
          body_path: release_notes.txt
